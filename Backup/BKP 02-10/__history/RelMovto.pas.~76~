unit RelMovto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Data.DB, Vcl.StdCtrls, Vcl.ComCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.Buttons,
  RelMovtoFormDM,
  CorDM, ConsultarCorForm,
  DepositoDM, ConsultarDepositoForm,
  ProdutoDM, ConsultarProdutoForm,
  TamanhoDM, ConsultarTamanhoForm;

type
  TRelMovtoForm = class(TForm)
    Panel1: TPanel;
    lblCodigo: TLabel;
    lblCor: TLabel;
    lblDeposito: TLabel;
    lblTamanho: TLabel;
    SBProduto: TSpeedButton;
    SBCor: TSpeedButton;
    SBDeposito: TSpeedButton;
    SBTamanho: TSpeedButton;
    Grid: TDBGrid;
    EdtCodigoProduto: TEdit;
    EdtCodigoCor: TEdit;
    EdtCodigoDeposito: TEdit;
    EdtCodigoTamanho: TEdit;
    btnConsultar: TButton;
    btnFechar: TButton;
    lblEstornarMovimento: TLabel;
    lblMovimento: TLabel;
    edtID: TEdit;
    btnEstornar: TButton;
    RGTipo: TRadioGroup;
    EdtDescricaoProduto: TEdit;
    EdtDescricaoCor: TEdit;
    EdtDescricaoDeposito: TEdit;
    EdtDescricaoTamanho: TEdit;
    procedure SBProdutoClick(Sender: TObject);
    procedure SBCorClick(Sender: TObject);
    procedure SBDepositoClick(Sender: TObject);
    procedure SBTamanhoClick(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
    procedure btnConsultarClick(Sender: TObject);
    procedure btnEstornarClick(Sender: TObject);
    procedure EdtCodigoProdutoChange(Sender: TObject);
    procedure EdtCodigoCorChange(Sender: TObject);
    procedure EdtCodigoDepositoChange(Sender: TObject);
    procedure EdtCodigoTamanhoChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  RelMovtoForm: TRelMovtoForm;

implementation

{$R *.dfm}

Uses MenuPrincipal, GlobalUnit;

procedure TRelMovtoForm.btnConsultarClick(Sender: TObject);
var codigo, cor, tamanho, deposito, tipo: string;
    temwhere: boolean;
    I :integer;
begin
 codigo := EdtCodigoProduto.Text;
 cor := EdtCodigoCor.Text;
 Tamanho := EdtCodigoTamanho.Text;
 Deposito := EdtCodigoDeposito.Text;
 if RGTipo.ItemIndex = 0 then tipo := 'E';
 if RGTipo.ItemIndex = 1 then tipo := 'S';

 if not RGTipo.ItemIndex = -1 then begin
  ShowMessage('Tipo do movimento não selecionado!');
  Abort;
 end;

 with RelMovtoDM.ConsultarProdMov do
 begin
  SQL.Clear;
  SQL.Add('select pm.id, pm.codigo, pm.cor, pm.tamanho, pm.deposito, pm.lote, pm.qtde, pm.data, pm.tipo, pm.usuario,');
  SQL.Add('CAST(pm.obs AS VARCHAR(255)) as Observação from prodmov pm');
  SQL.Add('inner join cadproduto cp on (cp.codigo = pm.codigo)');
  SQL.Add('inner join cadcor cc on (cc.descricao = pm.cor)');
  SQL.Add('inner join cadtamanho ct on (ct.codigo = pm.tamanho)');
  SQL.Add('inner join caddeposito cd on (cd.codigo = pm.deposito)');
  temwhere := False;

  if codigo <> '' then begin
   if temwhere then begin
    SQL.Add('and cp.codigo = :codigo');
   end
   else begin
    SQL.Add('where cp.codigo = :codigo');
    temwhere := true;
   end;
  ParamByName('codigo').AsString := codigo;
  end;

  if cor <> '' then begin
   if temwhere then begin
    SQL.Add('and cc.codigo = :cor');
   end
   else begin
    SQL.Add('where cc.codigo = :cor');
    temwhere := True;
   end;
  ParamByName('cor').AsString := cor;
  end;

  if deposito <> '' then begin
   if temwhere then begin
    SQL.Add('and cd.codigo = :deposito');
   end
   else begin
   SQL.Add('where cd.codigo = :deposito');
   temwhere := true;
   end;
  ParamByName('deposito').AsString := deposito;
  end;

  if tamanho <> '' then begin
   if temwhere then begin
    SQL.Add('and ct.codigo = :tamanho');
   end
   else begin
   SQL.Add('where ct.codigo = :tamanho');
   temwhere := true;
   end;
  ParamByName('tamanho').AsString := tamanho;
  end;

  if tipo = 'S' then begin
   if temwhere then begin
    SQL.Add('and pm.tipo = :tipo');
   end
   else begin
    SQL.Add('where pm.tipo = :tipo');
    temwhere := True;
   end;
  ParamByName('tipo').AsString := tipo;
  end;

  if tipo = 'E' then begin
   if temwhere then begin
    SQL.Add('and pm.tipo = :tipo');
   end
   else begin
    SQL.Add('where pm.tipo = :tipo');
    temwhere := True;
   end;
  ParamByName('tipo').AsString := tipo;
  end;
  RelMovtoDM.ConsultarProdMov.Open;
  for i := 0 to Grid.Columns.Count - 1 do
   Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
 end;
end;

procedure TRelMovtoForm.btnFecharClick(Sender: TObject);
begin
 if Parent is TTabSheet then
 Parent.Free;
end;

procedure TRelMovtoForm.EdtCodigoCorChange(Sender: TObject);
var codigo: string;
begin
 with CadCorDM.qryConsultarCor do
 begin
  codigo := EdtCodigoCor.Text;

  SQL.Clear;
  SQL.Add('select * from cadcor where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  EdtDescricaoCor.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelMovtoForm.EdtCodigoDepositoChange(Sender: TObject);
var codigo: string;
begin
 with CadDepositoDM.ConsultarDeposito do
 begin
  codigo := EdtCodigoDeposito.Text;
  SQL.Clear;
  SQL.Add('select * from caddeposito where codigo = :codigo');
  Parambyname('codigo').AsString := codigo;
  Open;

  EdtDescricaoDeposito.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelMovtoForm.EdtCodigoProdutoChange(Sender: TObject);
var codigo: string;
begin
 codigo := EdtCodigoProduto.Text;
 with CadProdutoDM.qryConsultarProduto do
 begin
  SQL.Clear;
  SQL.Add('select * from cadproduto where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  EdtDescricaoProduto.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelMovtoForm.EdtCodigoTamanhoChange(Sender: TObject);
var codigo: string;
begin
 with CadTamanhoDM.qryConsultarTamanho do
 begin
  codigo := EdtCodigoTamanho.Text;
  SQL.Clear;
  SQL.Add('select * from cadtamanho where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  EdtDescricaoTamanho.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelMovtoForm.SBCorClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadCorDM.qryConsultarCor do
 begin
  SQL.Clear;
  SQL.Add('select * from cadcor');
  Open;
 end;

  Application.CreateForm(TConsultarCor, ConsultarCor);
  codigo := ConsultarCor.SelecionarCor;
  if codigo <> '' then begin
   EdtCodigoCor.Text := codigo;
   descricao := ConsultarCor.Descricao;
   EdtDescricaoCor.Text := descricao;
  end;
end;

procedure TRelMovtoForm.SBDepositoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadDepositoDM.ConsultarDeposito do
 begin
  SQL.Clear;
  SQL.Add('select * from caddeposito');
  Open;
 end;

  Application.CreateForm(TConsultarDeposito, ConsultarDeposito);
  codigo := ConsultarDeposito.SelecionarDeposito;
  if codigo <> '' then begin
   EdtCodigoDeposito.Text := codigo;
   descricao := ConsultarDeposito.Descricao;
   EdtDescricaoDeposito.Text := descricao;
  end;
end;

procedure TRelMovtoForm.SBProdutoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadProdutoDM.qryConsultarProduto do
 begin
  SQL.Clear;
  SQL.Add('select * from cadproduto');
  Open;
 end;

  Application.CreateForm(TConsultarProduto, ConsultarProduto);
  codigo := ConsultarProduto.SelecionarProduto;
  if codigo <> '' then begin
   EdtCodigoProduto.Text := codigo;
   descricao := ConsultarProduto.Descricao;
   EdtDescricaoProduto.Text := descricao;
  end;
end;

procedure TRelMovtoForm.SBTamanhoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadTamanhoDM.ConsultarTamanho do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho');
  Open;
 end;

  Application.CreateForm(TConsultarTamanho, ConsultarTamanho);
  codigo := ConsultarTamanho.SelecionarTamanho;
  if codigo <> '' then begin
   EdtCodigoTamanho.Text := codigo;
   descricao := ConsultarTamanho.Descricao;
   EdtDescricaoTamanho.Text := descricao;
  end;
end;

procedure TRelMovtoForm.btnEstornarClick(Sender: TObject);
var ID, codigo, cor, tamanho, deposito, lote, qtde, tipo: string;
begin
  ID := EdtID.Text;

  if MessageDlg('Deseja continuar com o estorno? Essa ação é irreversível! Na dúvida, faça apenas uma entrada ou saída no código desejado!',
   mtConfirmation, [mbYes, mbNo], 0) = mrNo then begin
   Abort;
  end;

  with RelMovtoDM.IDQuery do
  begin
   SQL.Clear;
   SQL.Add('select ID, codigo, cor, tamanho, deposito, lote, qtde, tipo from prodmov where id = :ID');
   ParamByName('ID').AsString := ID;
   Open;

   if IsEmpty then begin
    ShowMessage('ID do movimento não encontrado');
    Abort;
   end;

   codigo := FieldByName('codigo').AsString;
   cor := FieldByName('cor').AsString;
   tamanho := FieldByName('tamanho').AsString;
   deposito := FieldByName('deposito').AsString;
   lote := FieldByName('lote').AsString;
   qtde := FieldByName('qtde').AsString;
   tipo := FieldByName('tipo').AsString;
  end;

  RelMovtoDM.Conexão.StartTransaction;
 try
  with RelMovtoDM.EstornarQuery do
  begin
   SQL.Add('delete from prodmov where id = :ID');
   ParamByName('ID').AsString := ID;
   ExecSQL;

   if tipo = 'E' then
   SQL.Add('update estoque set qtde = qtde - :qtde');
   SQL.Add('where codigo = :codigo and cor = :cor and tamanho = :tamanho and deposito = :deposito and lote = :lote');

   if tipo = 'S' then
   SQL.Add('update estoque set qtde = qtde + :qtde');
   SQL.Add('where codigo = :codigo and cor = :cor and tamanho = :tamanho and deposito = :deposito and lote = :lote');

   ParamByName('qtde').AsInteger := StrToInt(qtde);
   ParamByName('codigo').AsString := codigo;
   ParamByName('cor').AsString := cor;
   ParamByName('tamanho').AsString := tamanho;
   ParamByName('deposito').AsString := deposito;
   ParamByName('lote').AsString := lote;
   ExecSQL;
  end;
  RelMovtoDM.Conexão.Commit;
  ShowMessage('Estornado com sucesso!');
  EdtID.Clear;
  except
  RelMovtoDM.Conexão.Rollback;
  ShowMessage('Erro no estorno!');
 end;
end;
end.
