unit FaixaTamanho;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Data.DB, Vcl.ComCtrls,
  Vcl.Grids, Vcl.DBGrids,
  FaixaTamanhoDataModule,
  Log, LogDataModule,
  GlobalUnit;

type
  TCadFaixaTamanho = class(TForm)
    Panel1: TPanel;
    edtCodigo: TEdit;
    edtDescricao: TEdit;
    lblCodigo: TLabel;
    lblDescricao: TLabel;
    lblAtivo: TLabel;
    CBAtivo: TCheckBox;
    GridTamanhos: TDBGrid;
    btnIncluir: TButton;
    btnGravarAlterar: TButton;
    btnGravarIncluir: TButton;
    btnDesistir: TButton;
    btnAlterar: TButton;
    btnFechar: TButton;
    GridConsultarFaixa: TDBGrid;
    btnExcluir: TButton;
    procedure btnFecharClick(Sender: TObject);
    procedure btnIncluirClick(Sender: TObject);
    procedure btnDesistirClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnGravarIncluirClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure GridConsultarFaixaCellClick(Column: TColumn);
    procedure btnGravarAlterarClick(Sender: TObject);
    procedure GridTamanhosCellClick(Column: TColumn);
    procedure btnExcluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  CadFaixaTamanho: TCadFaixaTamanho;

implementation

{$R *.dfm}

Uses MenuPrincipal;

procedure TCadFaixaTamanho.btnIncluirClick(Sender: TObject);
var I: Integer;
begin
  EdtCodigo.Enabled := True;
  CBAtivo.Enabled := True;
  GridConsultarFaixa.Enabled := False;
  GridTamanhos.Enabled := True;

  EdtCodigo.Clear;
  EdtDescricao.Clear;

  btnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnExcluir.Visible := False;

  btnDesistir.Visible := True;
  btnGravarIncluir.Visible := True;

  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
end;

procedure TCadFaixaTamanho.btnGravarIncluirClick(Sender: TObject);
var codigo, descricao, ativo: string;
    I: Integer;
begin
  codigo := EdtCodigo.Text;
  Descricao := EdtDescricao.Text;
  if CBAtivo.Checked then Ativo := 'S'
  else Ativo := 'N';

  if EdtCodigo.Text = '' then begin
  ShowMessage('Código não pode ser vazio!');
  end
  else begin

  if EdtDescricao.Text = '' then begin
  ShowMessage('Descrição não pode ser vazia!');
  end
  else begin

  CadFaixaTamanhoDataModule.SelectQuery.SQL.Clear;
  CadFaixaTamanhoDataModule.SelectQuery.Close;
  CadFaixaTamanhoDataModule.SelectQuery.SQL.Text :=
  'select * from cadfaixa where descricao = :descricao';
  CadFaixaTamanhoDataModule.SelectQuery.ParamByName('descricao').AsString := descricao;
  CadFaixaTamanhoDataModule.SelectQuery.Open;

  if not CadFaixaTamanhoDataModule.SelectQuery.IsEmpty then begin
  ShowMessage('Existe outra faixa com os mesmos tamanhos! Favor verifique!')
  end
  else begin

  CadFaixaTamanhoDataModule.InsertQuery.SQL.Clear;
  CadFaixaTamanhoDataModule.InsertQuery.SQL.Text :=
  'insert into cadfaixa (codigo, descricao, ativo) values (:codigo, :descricao, :ativo)';
  CadFaixaTamanhoDataModule.InsertQuery.ParamByName('codigo').AsString := codigo;
  CadFaixaTamanhoDataModule.InsertQuery.ParamByName('descricao').AsString := descricao;
  CadFaixaTamanhoDataModule.InsertQuery.ParamByName('ativo').AsString := ativo;

  LogModule.InserirLog.SQL.Clear;
  LogModule.InserirLog.SQL.Text :=
  'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
  LogModule.InserirLog.ParamByName('descricao').AsString :=
  'Inseriu a faixa no código ' + codigo + ' na descrição ' + descricao + ' e ativo ' + ativo;
  LogModule.InserirLog.ParamByName('tela').AsString := 'CadFaixaTamanho';
  LogModule.InserirLog.ParamByName('data').AsDatetime := Now;
  LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
  try
  CadFaixaTamanhoDataModule.InsertQuery.ExecSQL;
  LogModule.InserirLog.ExecSQL;
  ShowMessage('Incluído com sucesso!');

  CadFaixaTamanhoDataModule.ConsultarFaixa.Close;
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  EdtCodigo.Enabled := False;
  EdtDescricao.Enabled := False;
  CBAtivo.Enabled := False;
  GridConsultarFaixa.Enabled := True;
  GridTamanhos.Enabled := False;

  btnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;

  btnDesistir.Visible := False;
  btnGravarIncluir.Visible := False;

  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
  except
  ShowMessage('Erro na inclusão!');
  end;
end;
end;
end;
end;

procedure TCadFaixaTamanho.btnAlterarClick(Sender: TObject);
var I: Integer;
begin
  if EdtCodigo.Text = '' then begin
  ShowMessage('Faixa não selecionada!');
  end
  else begin
  CBAtivo.Enabled := True;
  GridConsultarFaixa.Enabled := False;
  GridTamanhos.Enabled := Enabled;

  btnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnExcluir.Visible := False;

  btnDesistir.Visible := True;
  btnGravarAlterar.Visible := True;

  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
end;
end;

procedure TCadFaixaTamanho.btnGravarAlterarClick(Sender: TObject);
var codigo, descricao, ativo: string;
    I: Integer;
begin
  codigo := EdtCodigo.Text;
  Descricao := EdtDescricao.Text;
  if CBAtivo.Checked then Ativo := 'S'
  else Ativo := 'N';

  if EdtCodigo.Text = '' then begin
  ShowMessage('Código não pode ser vazio!');
  end
  else begin

  if EdtDescricao.Text = '' then begin
  ShowMessage('Descrição não pode ser vazia!');
  end
  else begin

  CadFaixaTamanhoDataModule.UpdateQuery.SQL.Clear;
  CadFaixaTamanhoDataModule.UpdateQuery.SQL.Text :=
  'update cadfaixa set descricao = :descricao, ativo = :ativo where codigo = :codigo';
  CadFaixaTamanhoDataModule.UpdateQuery.ParamByName('codigo').AsString := codigo;
  CadFaixaTamanhoDataModule.UpdateQuery.ParamByName('descricao').AsString := descricao;
  CadFaixaTamanhoDataModule.UpdateQuery.ParamByName('ativo').AsString := ativo;

  LogModule.InserirLog.SQL.Clear;
  LogModule.InserirLog.SQL.Text :=
  'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
  LogModule.InserirLog.ParamByName('descricao').AsString :=
  'Alterou a faixa no código ' + codigo + ' na descrição ' + descricao + ' e ativo ' + ativo;
  LogModule.InserirLog.ParamByName('tela').AsString := 'CadFaixaTamanho';
  LogModule.InserirLog.ParamByName('data').AsDatetime := Now;
  LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
  try
  CadFaixaTamanhoDataModule.UpdateQuery.ExecSQL;
  LogModule.InserirLog.ExecSQL;
  ShowMessage('Alterado com sucesso!');

  EdtCodigo.Enabled := False;
  EdtDescricao.Enabled := False;
  CBAtivo.Enabled := False;
  GridConsultarFaixa.Enabled := True;
  GridTamanhos.Enabled := False;

  btnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;

  btnDesistir.Visible := False;
  btnGravarAlterar.Visible := False;

  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
  except
  ShowMessage('Erro na alteração!');
 end;
end;
end;
end;

procedure TCadFaixaTamanho.btnDesistirClick(Sender: TObject);
var I: Integer;
begin
  EdtCodigo.Enabled := False;
  EdtDescricao.Enabled := False;
  CBAtivo.Enabled := False;
  GridConsultarFaixa.Enabled := True;
  GridTamanhos.Enabled := False;

  EdtCodigo.Clear;
  EdtDescricao.Clear;

  btnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;

  btnDesistir.Visible := False;
  btnGravarIncluir.Visible := False;
  btnGravarAlterar.Visible := False;

  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
end;

procedure TCadFaixaTamanho.btnFecharClick(Sender: TObject);
begin
 FecharTela(Sender);
end;

procedure TCadFaixaTamanho.FormShow(Sender: TObject);
var i: Integer;
begin
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
end;

procedure TCadFaixaTamanho.GridConsultarFaixaCellClick(Column: TColumn);
var codigo, descricao, ativo: string;
begin
  EdtCodigo.Text := CadFaixaTamanhoDataModule.ConsultarFaixa.FieldByName('codigo').AsString;
  EdtDescricao.Text := CadFaixaTamanhoDataModule.ConsultarFaixa.FieldByName('descricao').AsString;
  CBAtivo.Checked := CadFaixaTamanhoDataModule.ConsultarFaixa.FieldByName('ativo').AsString = 'S';
end;

procedure TCadFaixaTamanho.GridTamanhosCellClick(Column: TColumn);
var codigo, descricao: string;
begin
  if EdtDescricao.Text = '' then begin
  EdtDescricao.Text := CadFaixaTamanhoDataModule.ConsultarTamanho.FieldByName('descricao').AsString + EdtDescricao.Text
  end
  else begin
  EdtDescricao.Text := EdtDescricao.Text +  ' / ' + CadFaixaTamanhoDataModule.Tamanhos.FieldByName('descricao').AsString;
end;
end;

procedure TCadFaixaTamanho.btnExcluirClick(Sender: TObject);
var codigo, descricao, ativo: string;
    I: Integer;
begin
  codigo := EdtCodigo.Text;
  Descricao := EdtDescricao.Text;
  if CBAtivo.Checked then Ativo := 'S'
  else Ativo := 'N';

  if EdtCodigo.Text = '' then begin
  ShowMessage('Nenhuma faixa selecionada!')
  end
  else begin
  CadFaixaTamanhoDataModule.SelectQuery.SQL.Clear;
  CadFaixaTamanhoDataModule.SelectQuery.SQL.Text :=
  'select * from cadproduto where faixa = :codigo';
  CadFaixaTamanhoDataModule.SelectQuery.ParamByName('codigo').AsString := codigo;
  CadFaixaTamanhoDataModule.SelectQuery.Open;

  if not CadFaixaTamanhoDataModule.SelectQuery.IsEmpty then begin
  ShowMessage('Faixa está sendo usada em um cadastro de produto! Favor verifique!');
  end
  else begin

  CadFaixaTamanhoDataModule.DeleteQuery.SQL.Clear;
  CadFaixaTamanhoDataModule.DeleteQuery.SQL.Text :=
  'delete from cadfaixa where codigo = :codigo';
  CadFaixaTamanhoDataModule.DeleteQuery.ParamByName('codigo').AsString := codigo;

  LogModule.InserirLog.SQL.Clear;
  LogModule.InserirLog.SQL.Text :=
  'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
  LogModule.InserirLog.ParamByName('descricao').AsString :=
  'Excluiu a faixa no código ' + codigo + ' na descrição ' + descricao + ' e ativo ' + ativo;
  LogModule.InserirLog.ParamByName('tela').AsString := 'CadFaixaTamanho';
  LogModule.InserirLog.ParamByName('data').AsDatetime := Now;
  LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
  try
  CadFaixaTamanhoDataModule.DeleteQuery.ExecSQL;
  LogModule.InserirLog.ExecSQL;
  ShowMessage('Excluído com sucesso!');

  EdtCodigo.Clear;
  EdtDescricao.Clear;

  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarTamanho.SQL.Text :=
  'select distinct(codigo), descricao from cadtamanho where ativo = :ativo order by descricao desc';
  CadFaixaTamanhoDataModule.ConsultarTamanho.ParamByName('ativo').AsString := 'S';
  CadFaixaTamanhoDataModule.ConsultarTamanho.Open;

  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Clear;
  CadFaixaTamanhoDataModule.ConsultarFaixa.SQL.Text :=
  'select * from cadfaixa';
  CadFaixaTamanhoDataModule.ConsultarFaixa.Open;

  for i := 0 to GridConsultarFaixa.Columns.Count - 1 do
    GridConsultarFaixa.Columns[i].Width := GridConsultarFaixa.Canvas.TextWidth(GridConsultarFaixa.Columns[i].Title.Caption + '     ');
  for i := 0 to GridTamanhos.Columns.Count - 1 do
    GridTamanhos.Columns[i].Width := GridTamanhos.Canvas.TextWidth(GridTamanhos.Columns[i].Title.Caption + '     ');
  except
  ShowMessage('Erro na exclusão!');
  end;
end;
end;
end;
end.
