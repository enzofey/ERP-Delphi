unit Moeda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Data.DB, Vcl.StdCtrls,
  Vcl.Grids, Vcl.DBGrids,
  MoedaDM,
  GlobalUnit,
  LogDataModule;

type
  TCadMoeda = class(TForm)
    Panel1: TPanel;
    btnAlterar: TButton;
    btnDesistir: TButton;
    btnExcluir: TButton;
    btnFechar: TButton;
    btnGravarAlterar: TButton;
    btnGravarIncluir: TButton;
    btnIncluir: TButton;
    CBAtivo: TCheckBox;
    EdtDescricao: TEdit;
    EdtCodigo: TEdit;
    Grid: TDBGrid;
    lblAtivo: TLabel;
    lblDescricao: TLabel;
    lblCodigo: TLabel;
    procedure btnFecharClick(Sender: TObject);
    procedure btnIncluirClick(Sender: TObject);
    procedure btnDesistirClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure btnGravarIncluirClick(Sender: TObject);
    procedure btnGravarAlterarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  CadMoeda: TCadMoeda;

implementation

{$R *.dfm}

procedure TCadMoeda.btnIncluirClick(Sender: TObject);
begin
 CadMoedaDM.ConsultarMoeda.SQL.Clear;
 CadMoedaDM.ConsultarMoeda.SQL.Text :=
 'select * from cadmoeda';
 CadMoedaDM.ConsultarMoeda.Open;

 EdtCodigo.Enabled := True;
 EdtDescricao.Enabled := True;
 CBAtivo.Enabled := True;

 EdtCodigo.Clear;
 EdtDescricao.Clear;

 btnIncluir.Visible := False;
 btnFechar.Visible := False;
 btnExcluir.Visible := False;
 btnAlterar.Visible := False;

 btnGravarIncluir.Visible := True;
 btnDesistir.Visible := True;
end;

procedure TCadMoeda.btnGravarIncluirClick(Sender: TObject);
var codigo, descricao, ativo: string;
begin
 codigo := EdtCodigo.Text;
 Descricao := EdtDescricao.Text;
 if CBAtivo.Checked then ativo := 'S' else ativo := 'N';

 CadMoedaDM.SelectQuery.SQL.Clear;
 CadMoedaDM.SelectQuery.SQL.Text :=
 'select * from cadmoeda where codigo = :codigo';
 CadMoedaDM.SelectQuery.ParamByName('codigo').AsString := codigo;
 CadMoedaDM.SelectQuery.Open;

 if not CadMoedaDM.SelectQuery.IsEmpty then begin
 ShowMessage('Moeda já cadastrada!');
 end
 else begin
 CadMoedaDM.InsertQuery.SQL.Clear;
 CadMoedaDM.InsertQuery.SQL.Text :=
 'insert into cadmoeda (codigo, descricao, ativo) values (:codigo, :descricao, :ativo)';
 CadMoedaDM.InsertQuery.ParamByName('codigo').AsString := codigo;
 CadMoedaDM.InsertQuery.ParamByName('descricao').AsString := Descricao;
 CadMoedaDM.InsertQuery.ParamByName('ativo').AsString := ativo;
 end;

 LogModule.InserirLog.SQL.Clear;
 LogModule.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogModule.InserirLog.ParamByName('descricao').AsString :=
 'Inseriu a moeda ' + codigo + ' - ' + descricao + ' e ativo ' + ativo;
 LogModule.InserirLog.ParamByName('tela').AsString := 'CadMoeda';
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
 LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('data').AsDateTime := Now;

 try
 CadMoedaDM.InsertQuery.ExecSQL;
 LogModule.InserirLog.ExecSQL;
 ShowMessage('Cadastrado com sucesso!');
 EdtCodigo.Enabled := False;
 EdtDescricao.Enabled := False;
 CBAtivo.Enabled := False;

 btnIncluir.Visible := True;
 btnFechar.Visible := True;
 btnExcluir.Visible := True;
 btnAlterar.Visible := True;

 btnGravarIncluir.Visible := False;
 btnGravarAlterar.Visible := False;
 btnDesistir.Visible := False;

 CadMoedaDM.ConsultarMoeda.SQL.Clear;
 CadMoedaDM.ConsultarMoeda.SQL.Text :=
 'select * from cadmoeda';
 CadMoedaDM.ConsultarMoeda.Open;
 except
 ShowMessage('Erro na gravação!');
 end;
end;

procedure TCadMoeda.btnAlterarClick(Sender: TObject);
begin
 if EdtCodigo.Text = '' then begin
 ShowMessage('Nenhuma moeda selecionada!');
 end
 else begin
 EdtDescricao.Enabled := True;
 CBAtivo.Enabled := True;

 btnIncluir.Visible := False;
 btnFechar.Visible := False;
 btnExcluir.Visible := False;
 btnAlterar.Visible := False;

 btnGravarAlterar.Visible := True;
 btnDesistir.Visible := True;

 CadMoedaDM.ConsultarMoeda.SQL.Clear;
 CadMoedaDM.ConsultarMoeda.SQL.Text :=
 'select * from cadmoeda';
 CadMoedaDM.ConsultarMoeda.Open;
 end;
end;

procedure TCadMoeda.btnGravarAlterarClick(Sender: TObject);
var codigo, descricao, ativo: string;
begin
 codigo := EdtCodigo.Text;
 Descricao := EdtDescricao.Text;
 if CBAtivo.Checked then ativo := 'S' else ativo := 'N';

 CadMoedaDM.UpdateQuery.SQL.Clear;
 CadMoedaDM.UpdateQuery.SQL.Text :=
 'update cadmoeda set descricao = :descricao, ativo = :ativo where codigo = :codigo';
 CadMoedaDM.UpdateQuery.ParamByName('codigo').AsString := codigo;
 CadMoedaDM.UpdateQuery.ParamByName('descricao').AsString := Descricao;
 CadMoedaDM.UpdateQuery.ParamByName('ativo').AsString := ativo;

 LogModule.InserirLog.SQL.Clear;
 LogModule.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogModule.InserirLog.ParamByName('descricao').AsString :=
 'Alterou a moeda ' + codigo + ' - ' + descricao + ' e ativo ' + ativo;
 LogModule.InserirLog.ParamByName('tela').AsString := 'CadMoeda';
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
 LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('data').AsDateTime := Now;

 try
 CadMoedaDM.UpdateQuery.ExecSQL;
 LogModule.InserirLog.ExecSQL;
 ShowMessage('Alterado com sucesso!');
 EdtCodigo.Enabled := False;
 EdtDescricao.Enabled := False;
 CBAtivo.Enabled := False;

 btnIncluir.Visible := True;
 btnFechar.Visible := True;
 btnExcluir.Visible := True;
 btnAlterar.Visible := True;

 btnGravarIncluir.Visible := False;
 btnGravarAlterar.Visible := False;
 btnDesistir.Visible := False;

 CadMoedaDM.ConsultarMoeda.SQL.Clear;
 CadMoedaDM.ConsultarMoeda.SQL.Text :=
 'select * from cadmoeda';
 CadMoedaDM.ConsultarMoeda.Open;
 except
 ShowMessage('Erro na alteração!');
 end;
end;

procedure TCadMoeda.btnDesistirClick(Sender: TObject);
begin
 EdtCodigo.Enabled := False;
 EdtDescricao.Enabled := False;
 CBAtivo.Enabled := False;

 EdtCodigo.Clear;
 EdtDescricao.Clear;

 btnIncluir.Visible := True;
 btnFechar.Visible := True;
 btnExcluir.Visible := True;
 btnAlterar.Visible := True;

 btnGravarIncluir.Visible := False;
 btnGravarAlterar.Visible := False;
 btnDesistir.Visible := False;
end;

procedure TCadMoeda.btnExcluirClick(Sender: TObject);
var codigo, descricao, ativo: string;
begin
 codigo := EdtCodigo.Text;
 Descricao := EdtDescricao.Text;
 if CBAtivo.Checked then ativo := 'S' else ativo := 'N';

 if codigo = '' then begin
 ShowMessage('Nenhuma moeda selecionada!');
 end
 else begin

 CadMoedaDM.DeleteQuery.SQL.Clear;
 CadMoedaDM.DeleteQuery.SQL.Text :=
 'delete from cadmoeda where codigo = :codigo';
 CadMoedaDM.DeleteQuery.ParamByName('codigo').AsString := codigo;

 LogModule.InserirLog.SQL.Clear;
 LogModule.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogModule.InserirLog.ParamByName('descricao').AsString :=
 'Excluiu a moeda ' + codigo + ' - ' + descricao + ' e ativo ' + ativo;
 LogModule.InserirLog.ParamByName('tela').AsString := 'CadMoeda';
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
 LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('data').AsDateTime := Now;

  try
  CadMoedaDM.DeleteQuery.ExecSQL;
  LogModule.InserirLog.ExecSQL;
  ShowMessage('Excluído com sucesso!');

  EdtCodigo.Clear;
  EdtDescricao.Clear;
  except
  ShowMessage('Erro na exclusão!');
  end;
 end;
end;

procedure TCadMoeda.btnFecharClick(Sender: TObject);
begin
 Fechartela(sender);
end;

end.
