unit Cidade;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, Vcl.ComCtrls,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Buttons,
  EstadoDataModule, ConsultarEstadoForm,
  CidadeDataModule, ConsultarCidadeForm,
  PaisDataModule, ConsultarPaisForm,
  Log, LogDataModule,
  GlobalUnit;

type
  TCadCidade = class(TForm)
    Panel1: TPanel;
    lblCodigo: TLabel;
    lblCidade: TLabel;
    lblAtivo: TLabel;
    CBAtivo: TCheckBox;
    EdtCodigo: TEdit;
    EdtCidade: TEdit;
    btnIncluir: TButton;
    btnGravarIncluir: TButton;
    btnGravarAlterar: TButton;
    btnAlterar: TButton;
    btnDesistir: TButton;
    btnConsultar: TButton;
    btnExcluir: TButton;
    EdtEstado: TEdit;
    lblEstado: TLabel;
    lblPais: TLabel;
    EdtPais: TEdit;
    SBtnEstado: TSpeedButton;
    SBPais: TSpeedButton;
    btnFechar: TButton;
    procedure SBtnEstadoClick(Sender: TObject);
    procedure btnIncluirClick(Sender: TObject);
    procedure btnDesistirClick(Sender: TObject);
    procedure btnGravarIncluirClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure btnGravarAlterarClick(Sender: TObject);
    procedure btnConsultarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure SBPaisClick(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
  private
  public
  end;

var
  CadCidade: TCadCidade;

implementation

{$R *.dfm}

procedure TCadCidade.btnIncluirClick(Sender: TObject);
begin
  BtnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnExcluir.Visible := False;
  btnGravarAlterar.Visible := False;
  btnConsultar.Visible := False;

  BtnGravarIncluir.Visible := True;
  BtnDesistir.Visible := True;
  SBtnEstado.Enabled := True;
  SBPais.Enabled := True;

  EdtCodigo.Clear;
  EdtCidade.Clear;
  EdtPais.Clear;
  EdtEstado.Clear;

  EdtCodigo.Enabled := True;
  EdtCidade.Enabled := True;;
  EdtPais.Enabled := True;;
  EdtEstado.Enabled := True;
  CBAtivo.Enabled := True;
end;

procedure TCadCidade.btnGravarIncluirClick(Sender: TObject);
var codigo, cidade, pais, estado, ativo, tela: string;
    data: tdatetime;
begin
 codigo := EdtCodigo.Text;
 cidade := EdtCidade.Text;
 pais := EdtPais.text;
 estado := EdtEstado.Text;
 if CBAtivo.Checked then Ativo := 'S'
 else Ativo := 'N';
 data := now;
 tela := 'CadCidade';

 if EdtCodigo.Text = '' then begin
 ShowMessage('Código IBGE não pode ser vazio!');
 end
 else begin

 if EdtCidade.Text = '' then begin
 ShowMessage('Cidade não pode ser vazia!');
 end
 else begin

 if EdtEstado.Text = '' then begin
 ShowMessage('Estado não pode ser vazio!');
 end
 else begin

 if EdtPais.Text = '' then begin
 ShowMessage('País não pode ser vazia!');
 end
 else begin

 CadCidadeDataModule.FDQuery1.SQL.Clear;
 CadCidadeDataModule.FDQuery1.SQL.Text :=
 'SELECT * FROM cadcidade WHERE codigo=:codigo';
 CadCidadeDataModule.FDQuery1.ParamByName('codigo').AsString := codigo;
 CadCidadeDataModule.FDQuery1.Open;

 if NOT CadCidadeDataModule.FDQuery1.IsEmpty then begin
 showmessage('Cidade já cadastrada!');
 end
 else begin

 CadCidadeDataModule.FDQuery1.Close;
 CadCidadeDataModule.FDQuery1.SQL.Clear;
 CadCidadeDataModule.FDQuery1.SQL.Text :=
 'insert into cadcidade (codigo, cidade, pais, estado, ativo) values (:codigo, :cidade, :pais, :estado, :ativo)';
 CadCidadeDataModule.FDQuery1.ParamByName('codigo').AsString := Codigo;
 CadCidadeDataModule.FDQuery1.ParamByName('cidade').AsString := cidade;
 CadCidadeDataModule.FDQuery1.ParamByName('pais').AsString := pais;
 CadCidadeDataModule.FDQuery1.ParamByName('estado').AsString := estado;
 CadCidadeDataModule.FDQuery1.ParamByName('ativo').AsString := ativo;

 LogModule.InserirLog.SQL.Clear;
 LogModule.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogModule.InserirLog.ParamByName('descricao').AsString :=
 'Inseriu a cidade ' + cidade + ' no código ' + codigo + ' no estado ' + estado + ' no país ' + pais + ' e ativo ' + ativo;
 LogModule.InserirLog.ParamByName('tela').AsString := tela;
 LogModule.InserirLog.ParamByName('data').AsDatetime := Data;
 LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
 try
 CadCidadeDataModule.FDQuery1.ExecSQL;
 LogModule.InserirLog.ExecSQL;
 ShowMessage('Gravado com sucesso!');
 BtnIncluir.Visible := True;
 btnAlterar.Visible := True;
 btnExcluir.Visible := True;
 btnConsultar.Visible := True;

 btnGravarAlterar.Visible := False;
 BtnGravarIncluir.Visible := False;
 BtnDesistir.Visible := False;
 SBtnEstado.Enabled := False;
 SBPais.Enabled := False;

 EdtCodigo.Enabled := False;
 EdtCidade.Enabled := False;
 EdtPais.Enabled := False;
 EdtEstado.Enabled := False;
 CBAtivo.Enabled := False;
 except
 ShowMessage('Erro na gravação!');
 end;
end;
end;
end;
end;
end;
end;

procedure TCadCidade.btnAlterarClick(Sender: TObject);
begin
  if EdtCodigo.Text = '' then begin
    ShowMessage('Nenhuma cidade selecionada')
  end
  else begin
  BtnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnExcluir.Visible := False;
  btnConsultar.Visible := False;
  BtnGravarIncluir.Visible := False;

  btnGravarAlterar.Visible := True;
  BtnDesistir.Visible := True;
  SBtnEstado.Enabled := True;
  SBPais.Enabled := True;

  EdtCidade.Enabled := True;
  EdtPais.Enabled := True;
  EdtEstado.Enabled := True;
  CBAtivo.Enabled := True
end;
end;

procedure TCadCidade.btnGravarAlterarClick(Sender: TObject);
var codigo, cidade, estado, pais, ativo, tela: string;
    data: tdatetime;
begin
 codigo := EdtCodigo.Text;
 cidade := EdtCidade.Text;
 Estado := EdtEstado.Text;
 Pais := EdtPais.Text;
 if CBAtivo.Checked then Ativo := 'S'
 else Ativo := 'N';
 tela := 'CadCidade';
 data := now;

 if EdtCodigo.Text = '' then begin
 ShowMessage('Código IBGE não pode ser vazio!');
 end
 else begin

 if EdtCidade.Text = '' then begin
 ShowMessage('Cidade não pode ser vazia!');
 end
 else begin

 if EdtEstado.Text = '' then begin
 ShowMessage('Estado não pode ser vazio!');
 end
 else begin

 if EdtPais.Text = '' then begin
 ShowMessage('País não pode ser vazia!');
 end
 else begin

 CadCidadeDataModule.FDQuery1.SQL.Text :=
 'update cadcidade set cidade = :cidade, estado = :estado, pais = :pais, ativo = :ativo where codigo = :codigo';
 CadCidadeDataModule.FDQuery1.ParamByName('cidade').AsString := Cidade;
 CadCidadeDataModule.FDQuery1.ParamByName('ativo').AsString := ativo;
 CadCidadeDataModule.FDQuery1.ParamByName('estado').AsString := estado;
 CadCidadeDataModule.FDQuery1.ParamByName('pais').AsString := pais;
 CadCidadeDataModule.FDQuery1.ParamByName('codigo').AsString := codigo;

 LogModule.InserirLog.SQL.Clear;
 LogModule.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogModule.InserirLog.ParamByName('descricao').AsString :=
 'Alterou a cidade ' + cidade + ' no código ' + codigo + ' no estado ' + estado + ' no país ' + pais + ' e ativo ' + ativo;
 LogModule.InserirLog.ParamByName('tela').AsString := tela;
 LogModule.InserirLog.ParamByName('data').AsDatetime := Data;
 LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;

 try
 CadCidadeDataModule.FDQuery1.ExecSQL;
 LogModule.InserirLog.ExecSQL;
 ShowMessage('Alterado com sucesso!');
 BtnIncluir.Visible := True;
 btnAlterar.Visible := True;
 btnExcluir.Visible := True;
 btnConsultar.Visible := True;

 btnGravarAlterar.Visible := False;
 BtnGravarIncluir.Visible := False;
 BtnDesistir.Visible := False;
 SBtnEstado.Enabled := False;
 SBPais.Enabled := False;

 EdtCodigo.Enabled := False;
 EdtCidade.Enabled := False;
 EdtPais.Enabled := False;
 EdtEstado.Enabled := False;
 CBAtivo.Enabled := False;
 except
 ShowMessage('Erro na operação');
 end;
end;
end;
end;
end;
end;

procedure TCadCidade.btnConsultarClick(Sender: TObject);
 var
  codigo, cidade, pais, estado, ativo: string;
begin
  CadCidadeDataModule.FDQuery.Close;
  CadCidadeDataModule.FDQuery.Open;
  codigo := ConsultarCidade.SelecionarCidade;
  if codigo <> '' then
  begin
    Edtcidade.Text := ConsultarCidade.cidade;
    EdtCodigo.Text := ConsultarCidade.codigo;
    EdtPais.Text := ConsultarCidade.pais;
    EdtEstado.Text := ConsultarCidade.estado;
    CBAtivo.Checked := ConsultarCidade.ativo = 'S';
  end;
end;

procedure TCadCidade.btnDesistirClick(Sender: TObject);
begin
  BtnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;
  btnConsultar.Visible := True;

  btnGravarAlterar.Visible := False;
  BtnGravarIncluir.Visible := False;
  BtnDesistir.Visible := False;
  SBtnEstado.Enabled := False;
  SBPais.Enabled := False;

  EdtCodigo.Clear;
  EdtCidade.Clear;
  EdtPais.Clear;
  EdtEstado.Clear;

  EdtCodigo.Enabled := False;
  EdtCidade.Enabled := False;
  EdtPais.Enabled := False;
  EdtEstado.Enabled := False;
  CBAtivo.Enabled := False;
end;

procedure TCadCidade.btnExcluirClick(Sender: TObject);
var codigo, cidade, estado, pais, ativo, tela: string;
    data: tdatetime;
begin
 codigo := EdtCodigo.Text;
 cidade := EdtCidade.Text;
 Estado := EdtEstado.Text;
 Pais := EdtPais.Text;
 if CBAtivo.Checked then Ativo := 'S'
 else Ativo := 'N';
 tela := 'CadCidade';
 data := now;

 if EdtCodigo.Text = '' then begin
 showmessage ('Nenhuma cidade selecionada!')
 end
 else begin

 CadCidadeDataModule.FDQuery1.Close;
 CadCidadeDataModule.FDQuery1.SQL.Clear;
 CadCidadeDataModule.FDQuery1.SQL.Text :=
 'select * from cadCEP where cidade = :cidade';
 CadCidadeDataModule.FDQuery1.ParamByName('cidade').AsString := cidade;
 CadCidadeDataModule.FDQuery1.Open;

 if not CadCidadeDataModule.FDQuery1.IsEmpty then begin
 showmessage('Cidade usada em um cadastro de CEP! Favor verificar!')
 end
 else begin
 CadCidadeDataModule.FDQuery1.SQL.Text :=
 'delete from cadcidade where codigo = :codigo';
 CadCidadeDataModule.FDQuery1.ParamByName('codigo').AsString := codigo;

 LogModule.InserirLog.SQL.Clear;
 LogModule.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, usuario, emp_id) values (:descricao, :tela, :data, :usuario, :emp_id)';
 LogModule.InserirLog.ParamByName('descricao').AsString :=
 'Deletou a cidade ' + cidade + ' no código ' + codigo + ' no estado ' + estado + ' no país ' + pais + ' e ativo ' + ativo;
 LogModule.InserirLog.ParamByName('tela').AsString := tela;
 LogModule.InserirLog.ParamByName('data').AsDatetime := Data;
 LogModule.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogModule.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
 try
 CadCidadeDataModule.FDQuery1.ExecSQL;
 LogModule.InserirLog.ExecSQL;
 ShowMessage('Excluído com sucesso!');
  BtnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;
  btnConsultar.Visible := True;

  btnGravarAlterar.Visible := False;
  BtnGravarIncluir.Visible := False;
  BtnDesistir.Visible := False;
  SBtnEstado.Enabled := False;

  EdtCodigo.Enabled := False;
  EdtCidade.Enabled := False;
  EdtPais.Enabled := False;
  EdtEstado.Enabled := False;
  CBAtivo.Enabled := False;

  EdtCodigo.Clear;
  EdtCidade.Clear;
  EdtPais.Clear;
  EdtEstado.Clear;
 except
 ShowMessage('Erro na operação');
 end;
end;
end;
end;

procedure TCadCidade.SBtnEstadoClick(Sender: TObject);
var
  codigo: string;
begin
  CadEstadoModule.FDQuery1.Close;
  CadEstadoModule.FDQuery1.Open;
  Application.CreateForm(TConsultarEstado, ConsultarEstado);
  codigo := ConsultarEstado.SelecionarEstado;
  if codigo <> '' then
  begin
    EdtEstado.Text := codigo;
  end;
end;

procedure TCadCidade.SBPaisClick(Sender: TObject);
var
  sigla: string;
begin
  CadPaisDataModule.FDQuery1.Close;
  CadPaisDataModule.FDQuery1.Open;
  Application.CreateForm(TConsultarPais, ConsultarPais);
  sigla := ConsultarPais.SelecionarPais;
  if sigla <> '' then
  begin
    EdtPais.Text := sigla;
  end;
end;

procedure TCadCidade.btnFecharClick(Sender: TObject);
begin
   begin
    (Parent as TTabSheet).PageControl := nil;
    Parent.Free;
  end;
end;
end.
