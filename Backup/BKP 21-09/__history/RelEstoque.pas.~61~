unit RelEstoque;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.ComCtrls,
  Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons,
  RelEstoqueDM,
  ConsultarCorForm, CorDM,
  ConsultarProdutoForm, ProdutoDM,
  ConsultarDepositoForm, DepositoDM,
  ConsultarTamanhoForm, TamanhoDM;

type
  TRelEstoqueForm = class(TForm)
    Panel1: TPanel;
    Grid: TDBGrid;
    btnConsultar: TButton;
    btnFechar: TButton;
    EdtCodigoProduto: TEdit;
    EdtDescricaoProduto: TEdit;
    SBProduto: TSpeedButton;
    SBCor: TSpeedButton;
    SBTamanho: TSpeedButton;
    SBDeposito: TSpeedButton;
    EdtDescricaoDeposito: TEdit;
    EdtDescricaoTamanho: TEdit;
    EdtDescricaoCor: TEdit;
    EdtCodigoCor: TEdit;
    EdtCodigoTamanho: TEdit;
    EdtCodigoDeposito: TEdit;
    lblProduto: TLabel;
    lblCor: TLabel;
    lblTamanho: TLabel;
    lblDeposito: TLabel;
    procedure btnFecharClick(Sender: TObject);
    procedure btnConsultarClick(Sender: TObject);
    procedure SBCorClick(Sender: TObject);
    procedure SBProdutoClick(Sender: TObject);
    procedure SBDepositoClick(Sender: TObject);
    procedure SBTamanhoClick(Sender: TObject);
    procedure EdtCodigoProdutoChange(Sender: TObject);
    procedure EdtCodigoCorChange(Sender: TObject);
    procedure EdtCodigoTamanhoChange(Sender: TObject);
    procedure EdtCodigoDepositoChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  RelEstoqueForm: TRelEstoqueForm;

implementation

{$R *.dfm}

Uses GlobalUnit;

procedure TRelEstoqueForm.btnFecharClick(Sender: TObject);
begin
 if Parent is TTabSheet then
 Parent.Free;
end;

procedure TRelEstoqueForm.EdtCodigoCorChange(Sender: TObject);
var codigo: string;
begin
 with CadCorDM.ConsultarCor do
 begin
  codigo := EdtCodigoCor.Text;
  SQL.Clear;
  SQL.Add('select * from cadcor where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  EdtDescricaoCor.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelEstoqueForm.EdtCodigoDepositoChange(Sender: TObject);
var codigo: string;
begin
 with CadDepositoDM.ConsultarDeposito do
 begin
  codigo := EdtCodigoDeposito.Text;
  SQL.Clear;
  SQL.Add('select * from caddeposito where codigo = :codigo');
  Parambyname('codigo').AsString := codigo;
  Open;

  EdtDescricaoDeposito.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelEstoqueForm.EdtCodigoProdutoChange(Sender: TObject);
var codigo: string;
begin
 codigo := EdtCodigoProduto.Text;
 with CadProdutoDM.qryConsultarProduto do
 begin
  SQL.Clear;
  SQL.Add('select * from cadproduto where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  EdtDescricaoProduto.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelEstoqueForm.EdtCodigoTamanhoChange(Sender: TObject);
var codigo: string;
begin
 with CadTamanhoDM.ConsultarTamanho do
 begin
  codigo := EdtCodigoTamanho.Text;
  SQL.Clear;
  SQL.Add('select * from cadtamanho where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  EdtDescricaoTamanho.Text := FieldByName('descricao').AsString;
 end;
end;

procedure TRelEstoqueForm.SBCorClick(Sender: TObject);
var cor, descricao: string;
begin
 with CadCorDM.ConsultarCor do
 begin
  SQL.Clear;
  SQL.Add('select * from cadcor');
  Open;
 end;

  Application.CreateForm(TConsultarCor, ConsultarCor);
  cor := ConsultarCor.SelecionarCor;
  if cor <> '' then
  begin
    EdtCodigoCor.Text := cor;
    descricao := ConsultarCor.Descricao;
    EdtDescricaoCor.Text := descricao;
  end;
end;

procedure TRelEstoqueForm.SBDepositoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadDepositoDM.ConsultarDeposito do
 begin
  SQL.Clear;
  SQL.Add('select * from caddeposito');
  Open;
 end;

  Application.CreateForm(TConsultarDeposito, ConsultarDeposito);
  codigo := ConsultarDeposito.SelecionarDeposito;
  if codigo <> '' then
  begin
    EdtCodigoDeposito.Text := codigo;
    descricao := ConsultarDeposito.Descricao;
    EdtDescricaoDeposito.Text := descricao;
  end;
end;

procedure TRelEstoqueForm.SBProdutoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadProdutoDM.ConsultarProduto do
 begin
  SQL.Clear;
  SQL.Add('select * from cadproduto');
  Open;
 end;

  Application.CreateForm(TConsultarProduto, ConsultarProduto);
  codigo := ConsultarProduto.SelecionarProduto;
  if codigo <> '' then
  begin
    EdtCodigoProduto.Text := codigo;
    descricao := ConsultarProduto.Descricao;
    EdtDescricaoProduto.Text := descricao;
  end;
end;

procedure TRelEstoqueForm.SBTamanhoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadTamanhoDM.ConsultarTamanho do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho');
  Open;
 end;

  Application.CreateForm(TConsultarTamanho, ConsultarTamanho);
  codigo := ConsultarTamanho.SelecionarTamanho;
  if codigo <> '' then
  begin
    EdtCodigoTamanho.Text := codigo;
    descricao := ConsultarTamanho.Descricao;
    EdtDescricaoTamanho.Text := descricao;
  end;
end;

procedure TRelEstoqueForm.btnConsultarClick(Sender: TObject);
var i: Integer;
    produto, cor, tamanho, deposito: string;
    temwhere: boolean;
begin
  produto := EdtCodigoProduto.Text;
  cor := EdtCodigoCor.Text;
  tamanho := EdtCodigoTamanho.Text;
  deposito := EdtCodigoDeposito.Text;

  with EstoqueDM.ConsultarEstoque do
  begin
   SQL.Clear;
   SQL.Add('select es.codigo, cp.descricao as produto_desc, ');
   SQL.Add('es.cor as cor, cc.descricao as cor_desc, ');
   SQL.Add('es.tamanho as tamanho, ct.descricao as tamanho_desc, ');
   SQL.Add('es.deposito as deposito, cd.descricao as deposito_desc, ');
   SQL.Add('es.lote, ');
   SQL.Add('es.qtde ');
   SQL.Add('FROM estoque es ');
   SQL.Add('inner join cadproduto cp on (cp.codigo = es.codigo)');
   SQL.Add('inner join cadcor cc on (cc.codigo = es.cor)');
   SQL.Add('inner join cadtamanho ct on (ct.codigo = es.tamanho)');
   SQL.Add('inner join caddeposito cd on (cd.codigo = es.deposito)');
   temwhere := False;

   if produto <> '' then begin
    if temwhere then begin
     SQL.Add('AND es.codigo = :produto');
    end
    else begin
     SQL.Add('WHERE es.codigo = :produto');
     temwhere := True;
    end;
   ParamByName('produto').AsString := produto;
   end;


   if cor <> '' then begin
    if temwhere then begin
     SQL.Add('AND cor = :cor');
    end
    else begin
     SQL.Add('WHERE cor = :cor');
     temwhere := True;
    end;
   ParamByName('cor').AsString := cor;
   end;

   if deposito <> '' then begin
    if temwhere then begin
     SQL.Add('AND deposito = :deposito');
    end
    else begin
     SQL.Add('WHERE deposito = :deposito');
     temwhere := True;
    end;
   ParamByName('deposito').AsString := deposito;
   end;

   if tamanho <> '' then begin
    if temwhere then begin
     SQL.Add('AND tamanho = :tamanho');
    end
    else begin
     SQL.Add('WHERE tamanho = :tamanho');
     temwhere := true;
    end;
   ParamByName('tamanho').AsString := tamanho;
   end;
  Open;
  end;

  for i := 0 to Grid.Columns.Count - 1 do
   Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
end;
end.
