unit Tamanho;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.ComCtrls,
  TamanhoDM, ConsultarTamanhoForm,
  Log, LogDM,
  GlobalUnit, Vcl.Buttons, Data.DB, Vcl.Grids, Vcl.DBGrids;

type
  TCadTamanho = class(TForm)
    PageControl1: TPageControl;
    PageAcesso: TTabSheet;
    PageCadastro: TTabSheet;
    btnAlterar: TButton;
    btnConsultar: TButton;
    btnDesistir: TButton;
    btnExcluir: TButton;
    btnFechar: TButton;
    btnGravarAlterar: TButton;
    btnGravarIncluir: TButton;
    btnIncluir: TButton;
    CBAtivo: TCheckBox;
    EdtCodigo: TEdit;
    EdtDescricao: TEdit;
    lblAtivo: TLabel;
    lblCodigo: TLabel;
    lblDescricao: TLabel;
    lblAcessoCodigo: TLabel;
    EdtAcessoCodigo: TEdit;
    SBConsTamanho: TSpeedButton;
    RGAcessoAtivo: TRadioGroup;
    btnAcessoFechar: TButton;
    btnAcessoConsultar: TButton;
    EdtAcessoDescricao: TEdit;
    AcessoGrid: TDBGrid;
    procedure btnIncluirClick(Sender: TObject);
    procedure btnGravarIncluirClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure btnGravarAlterarClick(Sender: TObject);
    procedure btnDesistirClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure btnConsultarClick(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
    procedure btnAcessoConsultarClick(Sender: TObject);
    procedure SBConsTamanhoClick(Sender: TObject);
    procedure EdtAcessoCodigoChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  CadTamanho: TCadTamanho;

implementation

{$R *.dfm}

procedure TCadTamanho.btnIncluirClick(Sender: TObject);
begin
 EdtCodigo.Clear;
 EdtDescricao.Clear;

 BtnIncluir.Visible := False;
 BtnAlterar.Visible := False;
 BtnExcluir.Visible := False;
 BtnConsultar.Visible := False;

 BtnGravarIncluir.Visible := True;
 BtnDesistir.Visible := True;
 EdtCodigo.Enabled := True;
 EdtDescricao.Enabled := True;
 CBAtivo.Enabled := True;
end;

procedure TCadTamanho.EdtAcessoCodigoChange(Sender: TObject);
var codigo, descricao: string;
begin
 codigo := EdtAcessoCodigo.Text;

 with CadTamanhoDM.qryConsultarTamanho do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho where codigo = :codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  descricao := FieldByName('descricao').AsString;
  EdtAcessoDescricao.Text := descricao;
 end;
end;

procedure TCadTamanho.SBConsTamanhoClick(Sender: TObject);
var codigo, descricao: string;
begin
 with CadTamanhoDM.qryConsultarTamanho do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho');
  Open;

  Application.CreateForm(TConsultarTamanho, ConsultarTamanho);
  codigo := ConsultarTamanho.SelecionarTamanho;
  if codigo <> '' then begin
   EdtAcessoCodigo.Text := codigo;
   descricao := ConsultarTamanho.Descricao;
   EdtAcessoDescricao.Text := descricao;
  end;
 end;
end;

procedure TCadTamanho.btnGravarIncluirClick(Sender: TObject);
var codigo, descricao, ativo: string;
begin
 codigo:= EdtCodigo.Text;
 descricao:= EdtDescricao.Text;
 if CBAtivo.Checked then ativo := 'S' else ativo := 'N';

 if codigo = '' then begin
  ShowMessage('Código não pode ser vazio!');
  Abort;
 End;

 if Descricao = '' then begin
  ShowMessage('Descrição não pode ser vazia!');
  Abort;
 End;

 with CadTamanhoDM.qrySelect do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho where codigo=:codigo');
  ParamByName('codigo').AsString := codigo;
  Open;

  if not IsEmpty then begin
   ShowMessage('Tamanho já cadastrado!');
   Abort;
  end;
 end;

 CadTamanhoDM.Conexão.StartTransaction;
 try
  with CadTamanhoDM.qryInsert do
  begin
   SQL.Clear;
   SQL.Add('insert into cadtamanho (codigo, descricao, ativo)');
   SQL.Add('values');
   SQL.Add('(:codigo, :descricao, :ativo)');
   ParamByName('codigo').AsString := codigo;
   ParamByName('descricao').AsString := descricao;
   ParamByName('ativo').AsString := ativo;
   ExecSQL;
  end;

  with LogsDM.InserirLog do
  begin
   SQL.Clear;
   SQL.Add('insert into logs (descricao, tela, data, emp_id, usuario)');
   SQL.Add('values');
   SQL.Add('(:descricao, :tela, :data, :emp_id, :usuario)');
   ParamByName('descricao').AsString :=
   'Inseriu o tamanho ' + descricao + ' no código ' + codigo + ' e ativo ' + ativo;
   ParamByName('tela').AsString := 'CadTamanho';
   ParamByName('data').AsDatetime := Now;
   ParamByName('usuario').AsString := UsuarioLogado;
   ParamByName('emp_id').AsString := EmpresaLogada;
   ExecSQL;
  end;

 CadTamanhoDM.Conexão.Commit;
 ShowMessage('Gravado com sucesso!');
 BtnIncluir.Visible := True;
 BtnAlterar.Visible := True;
 BtnExcluir.Visible := True;
 BtnConsultar.Visible := True;

 BtnGravarIncluir.Visible := False;
 BtnDesistir.Visible := False;

 EdtCodigo.Enabled := False;
 EdtDescricao.Enabled := False;
 CBAtivo.Enabled := False;
 except
 CadTamanhoDM.Conexão.Rollback;
 ShowMessage('Erro na gravação!');
 end;
end;

procedure TCadTamanho.btnAlterarClick(Sender: TObject);
begin
 if EdtCodigo.Text = '' then begin
  ShowMessage('Nenhum tamanho selecionado!');
  Abort;
 end;

 BtnConsultar.Visible := False;
 BtnIncluir.Visible := False;
 BtnGravarIncluir.Visible := False;
 BtnExcluir.Visible := False;
 BtnAlterar.Visible := False;

 BtnGravarAlterar.Visible := True;
 BtnDesistir.Visible := True;
 EdtDescricao.Enabled := True;
 CBAtivo.Enabled := True;
end;

procedure TCadTamanho.btnGravarAlterarClick(Sender: TObject);
var codigo, descricao, ativo: string;
begin
 codigo:= EdtCodigo.Text;
 descricao:= EdtDescricao.Text;
 if CBAtivo.Checked then ativo := 'S' else ativo := 'N';

 if codigo = '' then begin
  ShowMessage('Código não pode ser vazio!');
  Abort;
 End;

 if Descricao = '' then begin
  ShowMessage('Descrição não pode ser vazia!');
  Abort;
 End;

 CadTamanhoDM.Conexão.StartTransaction;
 try
  with CadTamanhoDM.qryUpdate do
  begin
   SQL.Clear;
   SQL.Add('update CadTamanho set descricao = :descricao, ativo = :ativo where codigo = :codigo');
   ParamByName('codigo').AsString := codigo;
   ParamByName('descricao').AsString := descricao;
   ParamByName('ativo').AsString := ativo;
   ExecSQL;
  end;

  with LogsDM.InserirLog do
  begin
   SQL.Clear;
   SQL.Add('insert into logs (descricao, tela, data, emp_id, usuario)');
   SQL.Add('values');
   SQL.Add('(:descricao, :tela, :data, :emp_id, :usuario)');
   ParamByName('descricao').AsString :=
   'Alterou o tamanho ' + descricao + ' no código ' + codigo + ' e ativo ' + ativo;
   ParamByName('tela').AsString := 'CadTamanho';
   ParamByName('data').AsDatetime := Now;
   ParamByName('usuario').AsString := UsuarioLogado;
   ParamByName('emp_id').AsString := EmpresaLogada;
   ExecSQL;
  end;

  CadTamanhoDM.Conexão.Commit;
  ShowMessage('Gravado com sucesso!');
  BtnIncluir.Visible := True;
  BtnAlterar.Visible := True;
  BtnExcluir.Visible := True;
  BtnConsultar.Visible := True;

  BtnGravarIncluir.Visible := False;
  BtnDesistir.Visible := False;
  BtnGravarAlterar.Visible := False;

  EdtCodigo.Enabled := False;
  EdtDescricao.Enabled := False;
  CBAtivo.Enabled := False;
 except
 CadTamanhoDM.Conexão.Rollback;
 ShowMessage('Erro na gravação!');
 end;
end;

procedure TCadTamanho.btnConsultarClick(Sender: TObject);
var codigo, descricao, ativo: string;
begin
 with CadTamanhoDM.qryConsultarTamanho do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho');
  Open;
 end;

 Application.CreateForm(TConsultarTamanho, ConsultarTamanho);
 codigo := ConsultarTamanho.SelecionarTamanho;
 if codigo <> '' then begin
  EdtCodigo.Text := codigo;
  descricao := ConsultarTamanho.Descricao;
  EdtDescricao.Text := descricao;
  ativo := ConsultarTamanho.Ativo;
  CBAtivo.Checked := ativo = 'S';
 end;
end;

procedure TCadTamanho.btnDesistirClick(Sender: TObject);
begin
 BtnIncluir.Visible := True;

 BtnGravarIncluir.Visible := False;
 BtnDesistir.Visible := False;
 BtnGravarAlterar.Visible := False;

 EdtCodigo.Enabled := False;
 EdtDescricao.Enabled := False;
 CBAtivo.Enabled := False;

 EdtCodigo.Clear;
 EdtDescricao.Clear;

 BtnAlterar.Visible := True;
 BtnExcluir.Visible := True;
 BtnConsultar.Visible := True;
end;

procedure TCadTamanho.btnExcluirClick(Sender: TObject);
var codigo, tela, descricao, ativo: string;
begin
 codigo:= EdtCodigo.Text;
 descricao := EdtDescricao.Text;
 if CBAtivo.Checked then ativo := 'S' else ativo := 'N';

 if EdtCodigo.Text = '' then begin
  ShowMessage('Nenhum tamanho selecionado!');
  Abort;
 end;

 with CadTamanhoDM.qrySelect do
 begin
  SQL.Clear;
  SQL.Add('select cf.codigo from CadFaixa cf');
  SQL.Add('inner join cadtamanho ct on concat('' / '', cf.descricao, '' / '') like concat(''% / '', ct.descricao, '' / %'')');
  SQL.Add('where ct.descricao = :descricao');
  ParamByName('descricao').AsString := descricao;
  Open;

  if not IsEmpty then begin
   ShowMessage('Tamanho usado em uma Faixa de Tamanho! Favor verifique!');
   Abort;
  end;
 end;

 CadTamanhoDM.Conexão.StartTransaction;
 try
  with CadTamanhoDM.qryDelete do
  begin
   SQL.Clear;
   SQL.Add('delete from CadTamanho where codigo = :codigo');
   ParamByName('codigo').AsString := codigo;
   ExecSQL;
  end;

  with LogsDM.InserirLog do
  begin
   SQL.Clear;
   SQL.Add('insert into logs (descricao, tela, data, emp_id, usuario)');
   SQL.Add('values');
   SQL.Add('(:descricao, :tela, :data, :emp_id, :usuario)');
   ParamByName('descricao').AsString :=
   'Deletou o tamanho ' + descricao + ' no código ' + codigo + ' e ativo ' + ativo;
   ParamByName('tela').AsString := 'CadTamanho';
   ParamByName('data').AsDatetime := Now;
   ParamByName('usuario').AsString := UsuarioLogado;
   ParamByName('emp_id').AsString := EmpresaLogada;
   ExecSQL;
  end;

  CadTamanhoDM.Conexão.Commit;
  ShowMessage('Excluído com sucesso!');
  EdtCodigo.Clear;
  EdtDescricao.Clear;
  except
  CadTamanhoDM.Conexão.Rollback;
  ShowMessage('Erro na gravação!');
 end;
end;

procedure TCadTamanho.btnFecharClick(Sender: TObject);
begin
 if Parent is TTabSheet then
 Parent.Free;
end;

procedure TCadTamanho.btnAcessoConsultarClick(Sender: TObject);
var codigo, ativo: string;
    temwhere: boolean;
    i: integer;
begin
 codigo := EdtAcessoCodigo.Text;
 if RGAcessoAtivo.ItemIndex = 0 then ativo := 'S'
 else if RGAcessoAtivo.ItemIndex = 1 then ativo := 'N';

 with CadTamanhoDM.qryAcesso do
 begin
  SQL.Clear;
  SQL.Add('select * from cadtamanho');
  temwhere := false;

  if codigo <> '' then begin
   if temwhere then begin
    SQL.Add('and codigo = :codigo');
   end
   else begin
    SQL.Add('where codigo = :codigo');
    temwhere := true;
   end;
  ParamByName('codigo').AsString := codigo;
  end;

  if ativo = 'S' then begin
   if temwhere then begin
    SQL.Add('and ativo = :ativo');
   end
   else begin
    SQL.Add('where ativo = :ativo');
    temwhere := true;
   end;
  ParamByName('ativo').AsString := 'S';
  end;

  if ativo = 'N' then begin
   if temwhere then begin
    SQL.Add('and ativo = :ativo');
   end
   else begin
    SQL.Add('where ativo = :ativo');
    temwhere := true;
    end;
  ParamByName('ativo').AsString := 'N';
  end;
  Open;
 end;
  for i := 0 to AcessoGrid.Columns.Count - 1 do
  AcessoGrid.Columns[i].Width := AcessoGrid.Canvas.TextWidth(AcessoGrid.Columns[i].Title.Caption + '     ');
end;
end.
