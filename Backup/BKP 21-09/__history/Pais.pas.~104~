unit Pais;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, Vcl.ComCtrls,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Data.DB,
  Vcl.Grids, Vcl.DBGrids,
  PaisDM, ConsultarPaisForm,
  Log, LogDM,
  GlobalUnit, Vcl.Buttons;

type
  TCadPaisForm = class(TForm)
    lblSigla: TLabel;
    lblPais: TLabel;
    lblAtivo: TLabel;
    EdtSigla: TEdit;
    EdtPais: TEdit;
    CBAtivo: TCheckBox;
    Grid: TDBGrid;
    btnIncluir: TButton;
    btnDesistir: TButton;
    btnExcluir: TButton;
    btnGravarIncluir: TButton;
    btnGravarAlterar: TButton;
    btnAlterar: TButton;
    btnFechar: TButton;
    lblCodigoIBGE: TLabel;
    EdtCodigoIBGE: TEdit;
    Pages: TPageControl;
    AcessoPage: TTabSheet;
    CadastroPage: TTabSheet;
    lblCodigo: TLabel;
    EdtCodigo: TEdit;
    RGAcessoAtivo: TRadioGroup;
    lblAcessoSiglaPais: TLabel;
    EdtAcessoSiglaPais: TEdit;
    EdtAcessoPais: TEdit;
    SBConsPais: TSpeedButton;
    btnAcessoFechar: TButton;
    btnAcessoConsultar: TButton;
    AcessoGrid: TDBGrid;
    procedure btnIncluirClick(Sender: TObject);
    procedure btnDesistirClick(Sender: TObject);
    procedure btnGravarIncluirClick(Sender: TObject);
    procedure GridCellClick(Column: TColumn);
    procedure btnAlterarClick(Sender: TObject);
    procedure btnGravarAlterarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
    procedure btnAcessoConsultarClick(Sender: TObject);
    procedure SBConsPaisClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  CadPaisForm: TCadPaisForm;

implementation

{$R *.dfm}

procedure TCadPaisForm.btnIncluirClick(Sender: TObject);
var I: Integer;
begin
 CadPaisDM.ConsultarPais.SQL.Clear;
 CadPaisDM.ConsultarPais.SQL.Text :=
 'select * from cadpais';
 CadPaisDM.ConsultarPais.Open;

 EdtCodigo.Enabled := True;
 EdtSigla.Enabled := True;
 EdtPais.Enabled := True;
 CBAtivo.Enabled := True;
 EdtCodigoIBGE.Enabled := True;

 EdtSigla.Clear;
 EdtPais.Clear;
 EdtCodigo.Clear;
 EdtCodigoIBGE.Clear;

 btnIncluir.Visible := False;
 btnAlterar.Visible := False;
 btnExcluir.Visible := False;
 btnGravarAlterar.Visible := False;

 btnGravarIncluir.Visible := True;
 btnDesistir.Visible := True;

 for i := 0 to Grid.Columns.Count - 1 do
 Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
end;

procedure TCadPaisForm.btnGravarIncluirClick(Sender: TObject);
var sigla, pais, ativo, codigo: string;
    I: Integer;
begin
 sigla := EdtSigla.Text;
 Pais := EdtPais.Text;
 if CBAtivo.Checked then Ativo := 'S'
 else Ativo := 'N';
 codigo := EdtCodigoIBGE.text;

 if EdtSigla.Text = '' then begin
  ShowMessage('Sigla não pode ser vazia!');
  Abort;
 end;

 if EdtPais.Text = '' then begin
  ShowMessage('País não pode ser vazio!');
  Abort;
 end;

 if EdtCodigoIBGE.Text = '' then begin
  ShowMessage('Código do IBGE não pode ser vazio!');
  Abort;
 end;

 CadPaisDM.SelectQuery.SQL.Clear;
 CadPaisDM.SelectQuery.SQL.Text :=
 'select * from cadpais where sigla = :sigla';
 CadPaisDM.SelectQuery.ParambyName('sigla').AsString := sigla;

 if CadPaisDM.SelectQuery.SQL.IsEmpty then begin
  ShowMessage('País já cadastrado');
  Abort;
 end;

 CadPaisDM.InsertQuery.SQL.Text :=
 'insert into cadpais (sigla, pais, ativo, codigo) values (:sigla, :pais, :ativo, :codigoibge)';
 CadPaisDM.InsertQuery.ParamByName('sigla').AsString := sigla;
 CadPaisDM.InsertQuery.ParamByName('ativo').AsString := ativo;
 CadPaisDM.InsertQuery.ParamByName('pais').AsString := pais;
 CadPaisDM.InsertQuery.ParamByName('codigoibge').AsString := codigo;

 LogsDM.InserirLog.SQL.Clear;
 LogsDM.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogsDM.InserirLog.ParamByName('descricao').AsString :=
 'Inseriu o país ' + pais + ' na sigla ' + sigla + ' e ativo ' + ativo;
 LogsDM.InserirLog.ParamByName('tela').AsString := 'CadPais';
 LogsDM.InserirLog.ParamByName('data').AsDatetime := Now;
 LogsDM.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogsDM.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;

 try
 CadPaisDM.InsertQuery.ExecSQL;
 LogsDM.InserirLog.ExecSQL;
 ShowMessage('Gravado com sucesso!');
 EdtSigla.Enabled := False;
 EdtPais.Enabled := False;
 CBAtivo.Enabled := False;
 EdtCodigoIBGE.Enabled := False;
 EdtCodigo.Enabled := False;

 btnIncluir.Visible := True;
 btnAlterar.Visible := True;
 btnExcluir.Visible := True;

 btnGravarAlterar.Visible := False;
 btnGravarIncluir.Visible := False;
 btnDesistir.Visible := False;

 CadPaisDM.ConsultarPais.SQL.Clear;
 CadPaisDM.ConsultarPais.SQL.Text :=
 'select * from cadpais';
 CadPaisDM.ConsultarPais.Open;

 for i := 0 to Grid.Columns.Count - 1 do
 Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
 except
 ShowMessage('Erro na inclusão!');
 end;
end;

procedure TCadPaisForm.btnAlterarClick(Sender: TObject);
var I: integer;
begin
  if EdtCodigo.Text = '' then begin
  ShowMessage('País não selecionado!')
  end
  else begin
  EdtPais.Enabled := True;
  CBAtivo.Enabled := True;
  EdtCodigoIBGE.Enabled := True;

  btnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnGravarIncluir.Visible := False;
  btnExcluir.Visible := False;

  btnGravarAlterar.Visible := True;
  btnDesistir.Visible := True;

  CadPaisDM.ConsultarPais.SQL.Clear;
  CadPaisDM.ConsultarPais.SQL.Text :=
  'select * from cadpais';
  CadPaisDM.ConsultarPais.Open;

  for i := 0 to Grid.Columns.Count - 1 do
  Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
end;
end;

procedure TCadPaisForm.btnGravarAlterarClick(Sender: TObject);
var sigla, pais, ativo, codigo: string;
    I: integer;
begin
 Sigla := EdtSigla.Text;
 Pais := EdtPais.Text;
 if CBAtivo.Checked then Ativo := 'S' else Ativo := 'N';
 codigo := EdtCodigoIBGE.Text;

 if EdtSigla.Text = '' then begin
  ShowMessage('Sigla não pode ser vazia!');
  Abort;
 end;

 if EdtPais.Text = '' then begin
  ShowMessage('País não pode ser vazio!');
  Abort;
 end;

 if EdtCodigoIBGE.Text = '' then begin
  ShowMessage('Código do IBGE não pode ser vazio!');
  Abort;
 end;

  CadPaisDM.UpdateQuery.SQl.Clear;
  CadPaisDM.UpdateQuery.SQL.Text :=
  'update cadpais set pais = :pais, ativo = :ativo, codigo = :codigoibge where sigla = :sigla';
  CadPaisDM.UpdateQuery.ParamByName('sigla').AsString := sigla;
  CadPaisDM.UpdateQuery.ParamByName('pais').AsString := pais;
  CadPaisDM.UpdateQuery.ParamByName('ativo').AsString := ativo;
  CadPaisDM.UpdateQuery.ParamByName('codigoibge').AsString := codigo;

  LogsDM.InserirLog.SQL.Clear;
  LogsDM.InserirLog.SQL.Text :=
  'insert into logs (descricao, tela, data, usuario, emp_id) values (:descricao, :tela, :data, :usuario, :emp_id)';
  LogsDM.InserirLog.ParamByName('descricao').AsString :=
  'Alterou o país ' + pais + ' na sigla ' + sigla + ' e ativo ' + ativo;
  LogsDM.InserirLog.ParamByName('tela').AsString := 'CadPais';
  LogsDM.InserirLog.ParamByName('data').AsDatetime := Now;
  LogsDM.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
  LogsDM.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
  try
  CadPaisDM.UpdateQuery.ExecSQL;
  LogsDM.InserirLog.ExecSQL;
  ShowMessage('Alterado com sucesso!');

  CadPaisDM.ConsultarPais.SQL.Clear;
  CadPaisDM.ConsultarPais.SQL.Text :=
  'select * from cadpais';
  CadPaisDM.ConsultarPais.Open;

  EdtSigla.Enabled := False;
  EdtPais.Enabled := False;
  CBAtivo.Enabled := False;
  EdtCodigoIBGE.Enabled := False;

  btnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;

  btnGravarAlterar.Visible := False;
  btnGravarIncluir.Visible := False;
  btnDesistir.Visible := False;

  for i := 0 to Grid.Columns.Count - 1 do
  Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');

  except
  ShowMessage('Erro na alteração!');
  end;
end;

procedure TCadPaisForm.btnDesistirClick(Sender: TObject);
var I: integer;
begin
 CadPaisDM.ConsultarPais.SQL.Clear;
 CadPaisDM.ConsultarPais.SQL.Text :=
 'select * from cadpais';
 CadPaisDM.ConsultarPais.Open;

 EdtCodigo.Enabled := False;
 EdtSigla.Enabled := False;
 EdtPais.Enabled := False;
 CBAtivo.Enabled := False;
 EdtCodigoIBGE.Enabled := False;

 EdtSigla.Clear;
 EdtPais.Clear;
 EdtCodigoIBGE.Clear;

 btnIncluir.Visible := True;
 btnAlterar.Visible := True;
 btnExcluir.Visible := True;

 btnGravarAlterar.Visible := False;
 btnGravarIncluir.Visible := False;
 btnDesistir.Visible := False;

  for i := 0 to Grid.Columns.Count - 1 do
    Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
end;

procedure TCadPaisForm.btnExcluirClick(Sender: TObject);
var pais, sigla, ativo: string;
    I: integer;
begin
 sigla := EdtSigla.Text;
 pais := edtpais.text;
 if CBAtivo.Checked then Ativo := 'S' else Ativo := 'N';

 CadPaisDM.SelectQuery.SQl.Clear;
 CadPaisDM.SelectQuery.SQl.Text :=
 'select * from cadCEP where pais = :sigla';
 CadPaisDM.SelectQuery.ParamByName('sigla').AsString := sigla;
 CadPaisDM.SelectQuery.Open;

 if not CadPaisDM.SelectQuery.IsEmpty then begin
  ShowMessage('País está sendo usado no cadastro de CEP! Favor verifique!');
  Abort;
 end;

 CadPaisDM.SelectQuery.SQl.Clear;
 CadPaisDM.SelectQuery.SQl.Text :=
 'select * from cadestado where pais = :sigla';
 CadPaisDM.SelectQuery.ParamByName('sigla').AsString := sigla;
 CadPaisDM.SelectQuery.Open;

 if not CadPaisDM.SelectQuery.IsEmpty then begin
  ShowMessage('País está sendo usado no cadastro de Estado! Favor verifique!');
  Abort;
 end;

 CadPaisDM.SelectQuery.SQl.Clear;
 CadPaisDM.SelectQuery.SQl.Text :=
 'select * from cadcidade where pais = :sigla';
 CadPaisDM.SelectQuery.ParamByName('sigla').AsString := sigla;
 CadPaisDM.SelectQuery.Open;

 if not CadPaisDM.SelectQuery.IsEmpty then begin
  ShowMessage('País está sendo usado no cadastro de Cidade! Favor verifique!');
  Abort;
 end;

 CadPaisDM.SelectQuery.SQl.Clear;
 CadPaisDM.SelectQuery.SQl.Text :=
 'select * from cadentidade where pais = :sigla';
 CadPaisDM.SelectQuery.ParamByName('sigla').AsString := sigla;
 CadPaisDM.SelectQuery.Open;

 if not CadPaisDM.SelectQuery.IsEmpty then begin
  ShowMessage('País está sendo usado no cadastro de Entidade! Favor verifique!');
  Abort;
 end;

 CadPaisDM.SelectQuery.SQl.Clear;
 CadPaisDM.SelectQuery.SQl.Text :=
 'select * from cadpais where sigla = :sigla';
 CadPaisDM.SelectQuery.ParamByName('sigla').AsString := sigla;
 CadPaisDM.SelectQuery.Open;

 if CadPaisDM.SelectQuery.IsEmpty then begin
  showmessage('País não encontrado');
  Abort;
 end;

 CadPaisDM.DeleteQuery.SQL.Clear;
 CadPaisDM.DeleteQuery.SQL.Text :=
 'delete from cadpais where sigla = :sigla';
 CadPaisDM.DeleteQuery.ParamByName('sigla').AsString := sigla;

 LogsDM.InserirLog.SQL.Clear;
 LogsDM.InserirLog.SQL.Text :=
 'insert into logs (descricao, tela, data, emp_id, usuario) values (:descricao, :tela, :data, :emp_id, :usuario)';
 LogsDM.InserirLog.ParamByName('descricao').AsString :=
 'Deletou o país ' + pais + ' na sigla ' + sigla + ' e ativo ' + ativo;
 LogsDM.InserirLog.ParamByName('tela').AsString := 'CadPaís';
 LogsDM.InserirLog.ParamByName('data').AsDatetime := Now;
 LogsDM.InserirLog.ParamByName('usuario').AsString := UsuarioLogado;
 LogsDM.InserirLog.ParamByName('emp_id').AsString := EmpresaLogada;
 try
  CadPaisDM.DeleteQuery.ExecSQL;
  LogsDM.InserirLog.ExecSQL;
  ShowMessage('Excluído com sucesso!');

  CadPaisDM.ConsultarPais.SQL.Clear;
  CadPaisDM.ConsultarPais.SQL.Text :=
  'select * from cadpais';
  CadPaisDM.ConsultarPais.Open;

  EdtSigla.Enabled := False;
  EdtPais.Enabled := False;
  CBAtivo.Enabled := False;

  EdtCodigo.Clear;
  EdtSigla.Clear;
  EdtPais.Clear;
  EdtCodigoIBGE.Clear;

  btnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnExcluir.Visible := True;

  btnGravarAlterar.Visible := False;
  btnGravarIncluir.Visible := False;
  btnDesistir.Visible := False;

  for i := 0 to Grid.Columns.Count - 1 do
  Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
  except
  ShowMessage('Erro na exclusão');
  end;
end;

procedure TCadPaisForm.btnFecharClick(Sender: TObject);
begin
 if Parent is TTabSheet then
 Parent.Free;
end;

procedure TCadPaisForm.GridCellClick(Column: TColumn);
begin
 EdtCodigo.Text := CadPaisDM.ConsultarPais.FieldByName('codigo').AsString;
 EdtCodigoIBGE.Text := CadPaisDM.ConsultarPais.FieldByName('codigo_IBGE').AsString;
 EdtSigla.Text := CadPaisDM.ConsultarPais.FieldByName('sigla').AsString;
 EdtPais.Text := CadPaisDM.ConsultarPais.FieldByName('pais').AsString;
 CBAtivo.Checked := CadPaisDM.ConsultarPais.FieldByName('ativo').AsString = 'S';
end;

procedure TCadPaisForm.SBConsPaisClick(Sender: TObject);
var codigo, sigla, pais: string;
begin
 CadPaisDM.ConsultarPais.SQL.Clear;
 CadPaisDM.ConsultarPais.SQL.Text :=
 'select * from cadpais where ativo = :ativo';
 CadPaisDM.ConsultarPais.Parambyname('ativo').AsString := 'S';
 CadPaisDM.ConsultarPais.Open;

 Application.CreateForm(TConsultarPais, ConsultarPais);
 codigo := ConsultarPais.SelecionarPais;
 if codigo <> '' then begin
  sigla := ConsultarPais.Sigla;
  EdtAcessoSiglaPais.Text := sigla;
  pais := ConsultarPais.Pais;
  EdtAcessoPais.Text := Pais;
 end;
end;

procedure TCadPaisForm.FormShow(Sender: TObject);
var i: Integer;
begin
 CadPaisDM.ConsultarPais.SQL.Clear;
 CadPaisDM.ConsultarPais.SQL.Text :=
 'select * from cadpais';
 CadPaisDM.ConsultarPais.Open;

 for i := 0 to Grid.Columns.Count - 1 do
  Grid.Columns[i].Width := Grid.Canvas.TextWidth(Grid.Columns[i].Title.Caption + '     ');
end;

procedure TCadPaisForm.btnAcessoConsultarClick(Sender: TObject);
var I: integer;
    temwhere: boolean;
    sigla: string;
begin
 sigla := EdtAcessoSiglaPais.Text;
 CadPaisDM.ConsultarPais.SQL.Clear;
 CadPaisDM.ConsultarPais.SQL.Text :=
 'select * from cadpais';
 temwhere := false;

 if sigla <> '' then begin
  if temwhere then begin
   CadPaisDM.ConsultarPais.SQL.Add('and sigla = :sigla');
  end
  else begin
   CadPaisDM.ConsultarPais.SQL.Add('where sigla = :sigla');
   temwhere := true;
  end;
  CadPaisDM.ConsultarPais.ParamByName('sigla').AsString := sigla;
 end;

 if RGAcessoAtivo.ItemIndex = 0 then begin
  if temwhere then begin
   CadPaisDM.ConsultarPais.SQL.Add('and ativo = :ativo');
  end
  else begin
   CadPaisDM.ConsultarPais.SQL.Add('where ativo = :ativo');
   temwhere := true;
  end;
  CadPaisDM.ConsultarPais.ParamByName('ativo').AsString := 'S';
 end;

 if RGAcessoAtivo.ItemIndex = 1 then begin
  if temwhere then begin
   CadPaisDM.ConsultarPais.SQL.Add('and ativo = :ativo');
  end
  else begin
   CadPaisDM.ConsultarPais.SQL.Add('where ativo = :ativo');
  end;
  CadPaisDM.ConsultarPais.ParamByName('ativo').AsString := 'N';
 end;
end;
end.
