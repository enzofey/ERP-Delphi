unit CadCEP;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Buttons,
  CidadeDataModule, ConsultarCidadeForm,
  EstadoDataModule, ConsultarEstado,
  PaisDataModule, ConsultarPais,
  CEPDataModule, ConsultarCEP;

type
  TCadCEPForm = class(TForm)
    Panel1: TPanel;
    lblCEP: TLabel;
    lblCidade: TLabel;
    lblEstado: TLabel;
    lblPais: TLabel;
    EdtCEP: TEdit;
    EdtCidade: TEdit;
    EdtEstado: TEdit;
    EdtPais: TEdit;
    SBPais: TSpeedButton;
    SBEstado: TSpeedButton;
    SBCidade: TSpeedButton;
    btnIncluir: TButton;
    btnAlterar: TButton;
    btnGravarIncluir: TButton;
    btnGravarAlterar: TButton;
    btnDesistir: TButton;
    btnConsultar: TButton;
    btnExcluir: TButton;
    lblAtivo: TLabel;
    CBAtivo: TCheckBox;
    procedure SBCidadeClick(Sender: TObject);
    procedure SBEstadoClick(Sender: TObject);
    procedure SBPaisClick(Sender: TObject);
    procedure btnConsultarClick(Sender: TObject);
    procedure btnIncluirClick(Sender: TObject);
    procedure btnGravarIncluirClick(Sender: TObject);
    procedure btnDesistirClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure btnGravarAlterarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  CadCEPForm: TCadCEPForm;

implementation

{$R *.dfm}

procedure TCadCEPForm.btnIncluirClick(Sender: TObject);
begin
  EdtCEP.Enabled := True;
  EdtCidade.Enabled := True;
  EdtEstado.Enabled := True;
  EdtPais.Enabled := True;
  SBCidade.Enabled := True;
  SBEstado.Enabled := True;
  SBPais.Enabled := True;
  CBAtivo.Enabled := True;

  EdtCEP.Clear;
  EdtCidade.Clear;
  EdtEstado.Clear;
  EdtPais.Clear;

  btnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnGravarAlterar.Visible := False;
  btnExcluir.Visible := False;
  btnConsultar.Visible := False;

  btnGravarIncluir.Visible := True;
  btnDesistir.Visible := True;
end;

procedure TCadCEPForm.btnGravarIncluirClick(Sender: TObject);
var CEP, Cidade, Estado, Pais, Ativo: string;
begin
 CEP := EdtCEP.Text;
 Cidade := EdtCidade.Text;
 Estado := EdtEstado.Text;
 Pais := EdtPais.Text;
 if CBAtivo.Checked then Ativo := 'S'
 else Ativo := 'N';

 CadCEPDataModule.FDQuery.SQL.Clear;
 CadCEPDataModule.FDQuery.Close;
 CadCEPDataModule.FDQuery.SQL.Text := 'select * from cadcep where CEP = :cep';
 CadCEPDataModule.FDQuery.ParamByName('CEP').AsString := CEP;
 CadCEPDataModule.FDQuery.Open;

 if not CadCEPDataModule.FDQuery.IsEmpty then begin
   ShowMessage('CEP já cadastrado!')
 end
 else begin
 CadCEPDataModule.FDQuery.Close;
 CadCEPDataModule.FDQuery.SQL.Clear;
 CadCEPDataModule.FDQuery.SQL.Text := 'insert into cadCEP (CEP, cidade, estado, pais, ativo) values (:CEP, :Cidade, :Estado, :Pais, :Ativo)';
 CadCEPDataModule.FDQuery.ParamByName('CEP').AsString := CEP;
 CadCEPDataModule.FDQuery.ParamByName('cidade').AsString := cidade;
 CadCEPDataModule.FDQuery.ParamByName('estado').AsString := estado;
 CadCEPDataModule.FDQuery.ParamByName('pais').AsString := pais;
 CadCEPDataModule.FDQuery.ParamByName('ativo').AsString := ativo;
 try
   CadCEPDataModule.FDQuery.ExecSQL;
   ShowMessage('Cadastrado com sucesso!');
   EdtCEP.Enabled := False;
   EdtCidade.Enabled := False;
   EdtEstado.Enabled := False;
   EdtPais.Enabled := False;
   SBCidade.Enabled := False;
   SBEstado.Enabled := False;
   SBPais.Enabled := False;

   btnIncluir.Visible := True;
   btnAlterar.Visible := True;
   btnExcluir.Visible := True;
   btnConsultar.Visible := True;

   btnGravarIncluir.Visible := False;
   btnDesistir.Visible := False;
 except
   ShowMessage('Erro na inclusão');
 end;
end;
end;

procedure TCadCEPForm.btnAlterarClick(Sender: TObject);
begin
  if EdtCEP.Text = '' then begin
  ShowMessage('CEP não selecionado')
  end
  else begin
  EdtCidade.Enabled := True;
  EdtEstado.Enabled := True;
  EdtPais.Enabled := True;
  SBCidade.Enabled := True;
  SBEstado.Enabled := True;
  SBPais.Enabled := True;
  CBAtivo.Enabled := True;

  btnIncluir.Visible := False;
  btnAlterar.Visible := False;
  btnGravarAlterar.Visible := True;
  btnExcluir.Visible := False;
  btnConsultar.Visible := False;

  btnGravarIncluir.Visible := False;
  btnDesistir.Visible := True;
end;
end;

procedure TCadCEPForm.btnGravarAlterarClick(Sender: TObject);
var CEP, Cidade, Estado, Pais, Ativo: string;
begin
 CEP := EdtCEP.Text;
 Cidade := EdtCidade.Text;
 Estado := EdtEstado.Text;
 Pais := EdtPais.Text;
 if CBAtivo.Checked then Ativo := 'S'
 else Ativo := 'N';

 CadCEPDataModule.FDQuery.Close;
 CadCEPDataModule.FDQuery.SQL.Clear;
 CadCEPDataModule.FDQuery.SQL.Text := 'update cadCEP set cidade = :cidade, estado = :estado, pais = :pais, ativo = :ativo where CEP = :CEP';
 CadCEPDataModule.FDQuery.ParamByName('CEP').AsString := CEP;
 CadCEPDataModule.FDQuery.ParamByName('cidade').AsString := cidade;
 CadCEPDataModule.FDQuery.ParamByName('estado').AsString := estado;
 CadCEPDataModule.FDQuery.ParamByName('pais').AsString := pais;
 CadCEPDataModule.FDQuery.ParamByName('ativo').AsString := ativo;
 try
   CadCEPDataModule.FDQuery.ExecSQL;
   ShowMessage('Alterado com sucesso!');
   EdtCEP.Enabled := False;
   EdtCidade.Enabled := False;
   EdtEstado.Enabled := False;
   EdtPais.Enabled := False;
   SBCidade.Enabled := False;
   SBEstado.Enabled := False;
   SBPais.Enabled := False;
   CBAtivo.Enabled := False;

   btnIncluir.Visible := True;
   btnAlterar.Visible := True;
   btnExcluir.Visible := True;
   btnConsultar.Visible := True;

   btnGravarIncluir.Visible := False;
   btnGravarAlterar.Visible := False;
   btnDesistir.Visible := False;
 except
   ShowMessage('Erro na alteração');
 end;
end;

procedure TCadCEPForm.btnDesistirClick(Sender: TObject);
begin
  EdtCEP.Enabled := False;
  EdtCidade.Enabled := False;
  EdtEstado.Enabled := False;
  EdtPais.Enabled := False;
  SBCidade.Enabled := False;
  SBEstado.Enabled := False;
  SBPais.Enabled := False;
  CBAtivo.Enabled := False;

  EdtCEP.Clear;
  EdtCidade.Clear;
  EdtEstado.Clear;
  EdtPais.Clear;

  btnIncluir.Visible := True;
  btnAlterar.Visible := True;
  btnGravarAlterar.Visible := False;
  btnExcluir.Visible := True;
  btnConsultar.Visible := True;

  btnGravarIncluir.Visible := False;
  btnDesistir.Visible := False;
end;

procedure TCadCEPForm.btnExcluirClick(Sender: TObject);
var CEP: string;
begin
 CEP := EdtCEP.Text;

 CadCEPDataModule.FDQuery.SQL.Clear;
 CadCEPDataModule.FDQuery.Close;
 CadCEPDataModule.FDQuery.SQL.Text := 'select * from cadcep where CEP = :cep';
 CadCEPDataModule.FDQuery.ParamByName('CEP').AsString := CEP;
 CadCEPDataModule.FDQuery.Open;

 if CadCEPDataModule.FDQuery.IsEmpty then begin
   ShowMessage('CEP não encontrado!')
 end
 else begin
 CadCEPDataModule.FDQuery.Close;
 CadCEPDataModule.FDQuery.SQL.Clear;
 CadCEPDataModule.FDQuery.SQL.Text := 'delete from cadcep where cep = :cep';
 CadCEPDataModule.FDQuery.ParamByName('CEP').AsString := CEP;
end;
end;

procedure TCadCEPForm.btnConsultarClick(Sender: TObject);
var CEP, Cidade, Estado, Pais, ativo: string;
begin
  CadCEPDataModule.FDQuery1.Close;
  CadCEPDataModule.FDQuery1.Open;
  Application.CreateForm(TConsultarCEPForm, ConsultarCEPForm);
  CEP := ConsultarCEPForm.SelecionarCEP;
  Cidade := ConsultarCEPForm.Cidade;
  Estado := ConsultarCEPForm.Estado;
  Pais := ConsultarCEPForm.Pais;
  Ativo := ConsultarCEPForm.Ativo;
  if cep <> '' then
  begin
    EdtCEP.Text := CEP;
    EdtCidade.Text := Cidade;
    EdtEstado.Text := Estado;
    EdtPais.Text := Pais;
    Ativo := ConsultarCEPForm.Ativo;
    CBAtivo.Checked := Ativo = 'S';
  end;
end;

procedure TCadCEPForm.SBCidadeClick(Sender: TObject);
var
  cidade: string;
begin
  CadCidadeDataModule.FDQuery.Close;
  CadCidadeDataModule.FDQuery.Open;
  Application.CreateForm(TConsultarCidade, ConsultarCidade);
  cidade := ConsultarCidade.SelecionarCidade;
  if cidade <> '' then
  begin
    EdtCidade.Text := cidade;
  end;
end;

procedure TCadCEPForm.SBEstadoClick(Sender: TObject);
var
  codigo: string;
begin
  CadEstadoModule.FDQuery1.Close;
  CadEstadoModule.FDQuery1.Open;
  Application.CreateForm(TConsultarEstadoForm, ConsultarEstadoForm);
  codigo := ConsultarEstadoForm.SelecionarEstado;
  if codigo <> '' then
  begin
    EdtEstado.Text := codigo;
  end;
end;

procedure TCadCEPForm.SBPaisClick(Sender: TObject);
var
  sigla: string;
begin
  CadPaisDataModule.FDQuery1.Close;
  CadPaisDataModule.FDQuery1.Open;
  Application.CreateForm(TConsultarPaisForm, ConsultarPaisForm);
  sigla := ConsultarPaisForm.SelecionarPais;
  if sigla <> '' then
  begin
    EdtPais.Text := sigla;
  end;
end;

end.
